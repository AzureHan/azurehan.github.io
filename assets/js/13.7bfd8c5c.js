(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{174:function(t,_,v){"use strict";v.r(_);var e=v(0),a=Object(e.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,_=t.$createElement,v=t._self._c||_;return v("div",{staticClass:"content"},[v("h1",{attrs:{id:"http-协议"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#http-协议","aria-hidden":"true"}},[t._v("#")]),t._v(" HTTP 协议")]),t._v(" "),v("p",[t._v("HTTP 协议和 TCP/IP 协议族内的其他众多的协议相同，用于客户端和服务器之间的通信。是一种不保存状态，即无状态 ( stateless ) 协议。也就是说在 HTTP 这个级别，协议对于发送过的请求或响应都不做持久化处理。使用 URI 定位互联网上的资源。正是因为 URI 的特定功能，在互联网上任意位置的资源都能访问到。")]),t._v(" "),v("h3",{attrs:{id:"持久连接"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#持久连接","aria-hidden":"true"}},[t._v("#")]),t._v(" 持久连接")]),t._v(" "),v("p",[t._v("持久连接 ( keep-alive ) 的特点是，只要任意一端没有明确提出断开连接，则保持 TCP 连接状态。解决了请求一个页面需要多次获取相关文件 ( style \\ script \\ image ) 而频繁建立通信连接增加通信量开销的问题。")]),t._v(" "),v("blockquote",[v("p",[t._v("WebSocket 协议也是基于持久连接的特点，不但减少通信量开销的问题，还使客户端与服务端双向通信成为可能。")])]),t._v(" "),v("h3",{attrs:{id:"状态管理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#状态管理","aria-hidden":"true"}},[t._v("#")]),t._v(" 状态管理")]),t._v(" "),v("p",[t._v("HTTP 是无状态协议，它不对之前发生过的请求和响应的状态进行管理。也就是说，无法根据之前的状态进行本次的请求处理，保持登录状态也就不可能。于是 Cookie 技术被引入，通过在请求和响应报文中写入信息来控制客户端的状态。")]),t._v(" "),v("h2",{attrs:{id:"_1-http-请求方法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-http-请求方法","aria-hidden":"true"}},[t._v("#")]),t._v(" 1. HTTP 请求方法")]),t._v(" "),v("ul",[v("li",[t._v("GET")]),t._v(" "),v("li",[t._v("POST")]),t._v(" "),v("li",[t._v("PUT")]),t._v(" "),v("li",[t._v("DELETE")]),t._v(" "),v("li",[t._v("HEAD")]),t._v(" "),v("li",[t._v("OPTIONS")]),t._v(" "),v("li",[t._v("TRACE")])]),t._v(" "),v("h2",{attrs:{id:"_2-http-报文"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-http-报文","aria-hidden":"true"}},[t._v("#")]),t._v(" 2. HTTP 报文")]),t._v(" "),v("p",[t._v("用于 HTTP 协议交互的信息被称为 HTTP 报文。请求端 ( 客户端 ) 的 HTTP 报文叫做请求报文，响应端 ( 服务器端 ) 的叫做响应报文。HTTP 报文本身是由多行 ( 用 CR + LF 作换行符 ) 数据构成的字符串文本。HTTP 报文大致可分为报文首部和报文主体两块，两者由最初出现的空行 ( CR+LF ) 来划分。报文首部一定要有，而不一定要有报文主体。")]),t._v(" "),v("h3",{attrs:{id:"_2-1-报文的结构"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-报文的结构","aria-hidden":"true"}},[t._v("#")]),t._v(" 2.1 报文的结构")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("父")]),t._v(" "),v("th",[t._v("子")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("报文")]),t._v(" "),v("td",[t._v("（请求 \\ 响应）报文首部、空行、报文主体。")])]),t._v(" "),v("tr",[v("td",[t._v("请求报文首部")]),t._v(" "),v("td",[t._v("请求行、请求首部字段、通用首部字段、实体首部字段、其他。")])]),t._v(" "),v("tr",[v("td",[t._v("响应报文首部")]),t._v(" "),v("td",[t._v("状态行、响应首部字段、通用首部字段、实体首部字段、其他。")])]),t._v(" "),v("tr",[v("td",[t._v("请求行")]),t._v(" "),v("td",[t._v("用户请求的方法、请求 URI 、 HTTP 版本。")])]),t._v(" "),v("tr",[v("td",[t._v("状态行")]),t._v(" "),v("td",[t._v("表明响应结果的状态码、原因短语、 HTTP 版本。")])])])]),t._v(" "),v("blockquote",[v("p",[t._v("首部字段中其他可能包含 HTTP 的 RFC 里未定义的首部（Cookie 等）。")])]),t._v(" "),v("h5",{attrs:{id:"_2-1-1-报文主体和实体主体的差异"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-1-报文主体和实体主体的差异","aria-hidden":"true"}},[t._v("#")]),t._v(" 2.1.1 报文主体和实体主体的差异")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("中文")]),t._v(" "),v("th",[t._v("英文")]),t._v(" "),v("th",[t._v("描述")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("报文")]),t._v(" "),v("td",[t._v("message")]),t._v(" "),v("td",[t._v("HTTP 通信中的基本单位，由 8 位组字节流（octet sequence ，其中 octet 为 8 个比特）组成，通过 HTTP 通信传输。")])]),t._v(" "),v("tr",[v("td",[t._v("实体")]),t._v(" "),v("td",[t._v("entity")]),t._v(" "),v("td",[t._v("作为请求或响应的有效载荷数据（补充项）被传输，其内容由实体首部和实体主体组成。")])])])]),t._v(" "),v("p",[t._v("通常，报文主体等于实体主体。只有当传输中进行编码操作时，实体主体的内容发生变化，才导致它和报文主体产生差异。")]),t._v(" "),v("h5",{attrs:{id:"_2-1-2-压缩传输的内容编码"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-2-压缩传输的内容编码","aria-hidden":"true"}},[t._v("#")]),t._v(" 2.1.2 压缩传输的内容编码")]),t._v(" "),v("p",[t._v("内容编码指明应用在实体内容上的编码格式，并保持实体信息原样压缩。内容编码后的实体由客户端接收并负责解码。常用的内容编码有： gzip（GUN zip）、 compress（UNIX 系统的标准压缩）、 deflate（zlib）、 identity（不进行编码）。")]),t._v(" "),v("h5",{attrs:{id:"_2-1-3-分割发送的分块传输编码（chuncked-transfer-coding-）"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-3-分割发送的分块传输编码（chuncked-transfer-coding-）","aria-hidden":"true"}},[t._v("#")]),t._v(" 2.1.3 分割发送的分块传输编码（Chuncked Transfer Coding ）")]),t._v(" "),v("p",[t._v("在 HTTP 通信过程中，请求的编码实体资源尚未全部传输完成之前，浏览器无法显示请求页面。在传输大容量数据时，通过把数据分割成多块，能够让浏览器逐步显示页面。")]),t._v(" "),v("h5",{attrs:{id:"_2-1-4-发送多种数据的多部分对象集合"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-4-发送多种数据的多部分对象集合","aria-hidden":"true"}},[t._v("#")]),t._v(" 2.1.4 发送多种数据的多部分对象集合")]),t._v(" "),v("h5",{attrs:{id:"_2-1-5-获取部分内容的范围请求"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-5-获取部分内容的范围请求","aria-hidden":"true"}},[t._v("#")]),t._v(" 2.1.5 获取部分内容的范围请求")]),t._v(" "),v("h5",{attrs:{id:"_2-1-6-内容协商返回合适的内容"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-6-内容协商返回合适的内容","aria-hidden":"true"}},[t._v("#")]),t._v(" 2.1.6 内容协商返回合适的内容")]),t._v(" "),v("h2",{attrs:{id:"_3-http-状态码"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-http-状态码","aria-hidden":"true"}},[t._v("#")]),t._v(" 3. HTTP 状态码")]),t._v(" "),v("p",[v("code",[t._v("1xx")]),t._v(" 信息")]),t._v(" "),v("p",[t._v("服务器收到请求，需要请求者继续执行操作")]),t._v(" "),v("p",[v("code",[t._v("2xx")]),t._v(" 成功")]),t._v(" "),v("p",[t._v("操作被成功接收并处理")]),t._v(" "),v("p",[v("code",[t._v("3xx")]),t._v(" 重定向")]),t._v(" "),v("p",[t._v("需要进一步的操作以完成请求")]),t._v(" "),v("p",[v("code",[t._v("4xx")]),t._v(" 客户端错误")]),t._v(" "),v("p",[t._v("请求包含语法错误或无法完成请求")]),t._v(" "),v("p",[v("code",[t._v("5xx")]),t._v(" 服务器错误")]),t._v(" "),v("p",[t._v("服务器在处理请求的过程中发生了错误")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",{staticStyle:{"text-align":"left"}},[t._v("状态码")]),t._v(" "),v("th",[t._v("状态名称")]),t._v(" "),v("th",[t._v("状态描述")])])]),t._v(" "),v("tbody",[v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("200")]),t._v(" "),v("td",[t._v("OK")]),t._v(" "),v("td",[t._v("请求成功。一般用于GET与POST请求。")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("201")]),t._v(" "),v("td",[t._v("Created")]),t._v(" "),v("td",[t._v("已创建新的资源。")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("202")]),t._v(" "),v("td",[t._v("Accepted")]),t._v(" "),v("td",[t._v("已经接受请求，但未处理完成。")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("204")]),t._v(" "),v("td",[t._v("No Content")]),t._v(" "),v("td",[t._v("无返回内容。在未更新网页的情况下，可确保 User-Agent 继续显示当前文档。")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("205")]),t._v(" "),v("td",[t._v("Reset Content")]),t._v(" "),v("td",[t._v("User-Agent 应重置文档。可通过此返回码清除浏览器的表单域。")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}}),t._v(" "),v("td"),t._v(" "),v("td")]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("301")]),t._v(" "),v("td",[t._v("Moved Permanently")]),t._v(" "),v("td",[t._v("永久移动。请求的资源已被永久的移动到新URI，返回信息会包括新的URI，浏览器会自动定向到新URI。今后任何新的请求都应使用新的URI代替。")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("302")]),t._v(" "),v("td",[t._v("Found")]),t._v(" "),v("td",[t._v("临时移动。资源只是临时被移动，客户端应继续使用原有URI。")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("304")]),t._v(" "),v("td",[t._v("Not Modified")]),t._v(" "),v("td",[t._v("所请求的资源未修改。服务器返回此状态码时，不会返回任何资源。User-Agent 虽然发现了本地有该资源的缓存，但是不确定是否是最新的，于是向服务器询问。若服务器认为浏览器的缓存版本还可用，那么便会返回此状态码。")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}}),t._v(" "),v("td"),t._v(" "),v("td")]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("400")]),t._v(" "),v("td",[t._v("Bad Request")]),t._v(" "),v("td",[t._v("客户端请求的语法错误，服务器无法理解。")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("401")]),t._v(" "),v("td",[t._v("Unauthorized")]),t._v(" "),v("td",[t._v("请求要求用户的身份认证。")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("403")]),t._v(" "),v("td",[t._v("Forbidden")]),t._v(" "),v("td",[t._v("服务器理解请求客户端的请求，但是拒绝执行此请求。")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("404")]),t._v(" "),v("td",[t._v("Not Found")]),t._v(" "),v("td",[t._v("服务器无法根据客户端的请求找到资源。")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("405")]),t._v(" "),v("td",[t._v("Method Not Allowed")]),t._v(" "),v("td",[t._v("客户端请求中的方法被禁止。")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}}),t._v(" "),v("td"),t._v(" "),v("td")]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("500")]),t._v(" "),v("td",[t._v("Internal Server Error")]),t._v(" "),v("td",[t._v("服务器内部错误，无法完成请求。")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("502")]),t._v(" "),v("td",[t._v("Bad Gateway")]),t._v(" "),v("td",[t._v("充当网关或代理的服务器，从远端服务器接收到了一个无效的请求。")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[t._v("503")]),t._v(" "),v("td",[t._v("Service Unavailable")]),t._v(" "),v("td",[t._v("服务超载或维护。服务器暂时的无法处理客户端的请求。延时的长度可包含在服务器的Retry-After头信息中。")])])])]),t._v(" "),v("h2",{attrs:{id:"_4-http-首部"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_4-http-首部","aria-hidden":"true"}},[t._v("#")]),t._v(" 4. HTTP 首部")]),t._v(" "),v("h2",{attrs:{id:"_5-http-缓存机制"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_5-http-缓存机制","aria-hidden":"true"}},[t._v("#")]),t._v(" 5. HTTP 缓存机制")]),t._v(" "),v("h3",{attrs:{id:"_5-1-协商缓存"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-协商缓存","aria-hidden":"true"}},[t._v("#")]),t._v(" 5.1 协商缓存")]),t._v(" "),v("h5",{attrs:{id:"_5-1-1-if-modified-since-与-last-modified"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-1-if-modified-since-与-last-modified","aria-hidden":"true"}},[t._v("#")]),t._v(" 5.1.1 "),v("code",[t._v("If-Modified-Since")]),t._v(" 与 "),v("code",[t._v("Last-modified")])]),t._v(" "),v("p",[t._v("服务器程序检查请求头里面的 "),v("code",[t._v("If-modified-Since")]),t._v(" ，如果最后修改时间相同 ( 例如静态文件的 Modified Time 通过 shell "),v("code",[t._v("ls -l")]),t._v(" 可以查看 ) 则返回 304 ( 内容未修改 )，否则给相应头添加 "),v("code",[t._v("Last-Modified")]),t._v(" 并且返回响应内容。")]),t._v(" "),v("h5",{attrs:{id:"_5-1-2-if-none-match-与-etag"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-2-if-none-match-与-etag","aria-hidden":"true"}},[t._v("#")]),t._v(" 5.1.2 "),v("code",[t._v("If-None-Match")]),t._v(" 与 "),v("code",[t._v("Etag")])]),t._v(" "),v("p",[t._v("服务器程序检查检查请求头里面的 "),v("code",[t._v("If-None-Match")]),t._v(" 的值与当前文件的内容通过 HASH 算法生成的内容摘要字符对比，相同则直接返回 304，否则给相应头添加 "),v("code",[t._v("Etag")]),t._v(" 属性为当前的内容摘要字符，并且返回响应内容。")]),t._v(" "),v("h3",{attrs:{id:"_5-2-强缓存"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-强缓存","aria-hidden":"true"}},[t._v("#")]),t._v(" 5.2 强缓存")]),t._v(" "),v("p",[t._v("如果在设置了 "),v("code",[t._v("Expires")]),t._v(" 指定过期时间之前 或者 在 "),v("code",[t._v("Cache-Control")]),t._v(" ( HTTP 1.0 不支持 ) 指定过期时间之内 , 浏览器不会发起请求。")]),t._v(" "),v("p",[v("code",[t._v("Expires")]),t._v(" 和 "),v("code",[t._v("Cache-Control")]),t._v(" 虽然是强缓存，但用户主动触发的刷新行为，还是会采用缓存协商的策略，主动触发的刷新行为包括点击刷新按钮、右键刷新、F5 刷新、Ctrl + F5 刷新等 , 发起请求如果没有修改会返回 304 ( 内容未修改 ) , 如果已经改变则返回新内容。")]),t._v(" "),v("p",[t._v("当然如果在控制台里面选中了 disable cahce 则无论如何都会请求最新内容 ( 304 协商缓存、强缓存 都无效 ) ，因为 1. 不会检查本地是否有缓存 2. 请求头信息既没有 "),v("code",[t._v("If-Modified-Since")]),t._v(" 也没有 "),v("code",[t._v("If-None-Match")]),t._v(" 来让服务端判断 。")]),t._v(" "),v("h2",{attrs:{id:"_6-参考"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_6-参考","aria-hidden":"true"}},[t._v("#")]),t._v(" 6. 参考")]),t._v(" "),v("ol",[v("li",[t._v("《 图解 HTTP 》")]),t._v(" "),v("li",[t._v("https://blog.csdn.net/canot/article/details/76359917")]),t._v(" "),v("li",[t._v("https://blog.csdn.net/kane_canpower/article/details/56488813")])])])}],!1,null,null,null);a.options.__file="HTTP.md";_.default=a.exports}}]);