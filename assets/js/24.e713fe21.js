(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{163:function(t,s,a){"use strict";a.r(s);var e=a(0),n=Object(e.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),a("p",[t._v("控制反转可以给程序的代码解耦，将原本在内部依赖的功能由外部注入。很多时候我们为了提高代码的扩展性和维护性，在编写类时依赖的是接口或抽象类，而并不是一个具体的实现类。当内部依赖的功能需要更改，就只需要替换注入的部分即可实现，不需要维护程序代码。")]),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),t._m(7),t._v(" "),t._m(8),t._v(" "),t._m(9),t._v(" "),t._m(10),t._v(" "),a("p",[t._v("程序首先注册依赖，在需要时从容器中取出依赖。")]),t._v(" "),a("p",[t._v("适用于 ( 简单绑定、绑定一个单例、绑定实例、绑定初始数据、绑定接口到实现、上下文绑定 ) 。")]),t._v(" "),t._m(11),t._v(" "),t._m(12),t._v(" "),t._m(13),t._v(" "),t._m(14),t._v(" "),t._m(15),t._v(" "),t._m(16),t._v(" "),t._m(17),t._v(" "),t._m(18),t._v(" "),t._m(19),t._v(" "),t._m(20),t._v(" "),t._m(21),t._v(" "),t._m(22),t._v(" "),t._m(23),t._m(24),t._v(" "),a("ol",[a("li",[a("a",{attrs:{href:"https://segmentfault.com/a/1190000002411255",target:"_blank",rel:"noopener noreferrer"}},[t._v("PHP程序员如何理解IoC/DI"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.insp.top/article/learn-laravel-container",target:"_blank",rel:"noopener noreferrer"}},[t._v("laravel 学习笔记 —— 神奇的服务容器"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://huoding.com/2015/11/11/482",target:"_blank",rel:"noopener noreferrer"}},[t._v("Dependency Injection 和 Service Locator"),a("OutboundLink")],1)])])])},[function(){var t=this.$createElement,s=this._self._c||t;return s("h1",{attrs:{id:"php-控制反转"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#php-控制反转","aria-hidden":"true"}},[this._v("#")]),this._v(" PHP 控制反转")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_1-简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-简介","aria-hidden":"true"}},[this._v("#")]),this._v(" 1. 简介")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("对象之间难免会有各种各样的依赖关系，如果我们的代码直接依赖于具体的实现，那么就是一种强耦合，从而降低了系统的灵活性，为了解耦，我们的代码应该依赖接口，至于具体的实现，则通过第三方注入进去，这里的第三方通常就是我们常说的容器。因为在这个过程中，具体实现的控制权从我们的代码转移到了容器，所以称之为控制反转。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_2-术语"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-术语","aria-hidden":"true"}},[this._v("#")]),this._v(" 2. 术语")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_2-1-ioc-inversion-of-control-控制反转"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-ioc-inversion-of-control-控制反转","aria-hidden":"true"}},[this._v("#")]),this._v(" 2.1 IoC ( Inversion of Control / 控制反转 )")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("依赖关系的转移")]),this._v(" "),s("li",[this._v("依赖抽象而非实例")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_2-2-di-dependency-injection-依赖注入"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-di-dependency-injection-依赖注入","aria-hidden":"true"}},[this._v("#")]),this._v(" 2.2 DI ( Dependency Injection / 依赖注入 )")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("不必自己在代码中维护对象的依赖")]),this._v(" "),s("li",[this._v("容器自动根据配置，将依赖注入指定对象")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_2-3-aop-aspect-oriented-programming-面向方面编程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-aop-aspect-oriented-programming-面向方面编程","aria-hidden":"true"}},[this._v("#")]),this._v(" 2.3 AOP ( Aspect-oriented programming / 面向方面编程 )")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("无需修改任何一行程序代码，将功能加入至原先的应用程序中，也可以在不修改任何程序的情况下移除")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_3-实现依赖注入容器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-实现依赖注入容器","aria-hidden":"true"}},[this._v("#")]),this._v(" 3. 实现依赖注入容器")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("p",[t._v("容器设计魔术方法 "),a("code",[t._v("Setter")]),t._v(" 和 "),a("code",[t._v("Getter")]),t._v(" ，设计方法 "),a("code",[t._v("Build")]),t._v(" ， "),a("code",[t._v("GetDependencies")]),t._v(" 和 "),a("code",[t._v("GetDefaultValue")]),t._v(" 。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_3-1-魔术方法-setter"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-魔术方法-setter","aria-hidden":"true"}},[this._v("#")]),this._v(" 3.1 魔术方法 Setter")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ol",[s("li",[this._v("直接保存传入的键值对到容器内部的注册列表")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_3-2-魔术方法-getter"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-魔术方法-getter","aria-hidden":"true"}},[this._v("#")]),this._v(" 3.2 魔术方法 Getter")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ol",[s("li",[this._v("根据传入的键名在注册列表取出值并调用方法 "),s("code",[this._v("Build")]),this._v(" 并返回结果")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_3-3-方法-build"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-方法-build","aria-hidden":"true"}},[this._v("#")]),this._v(" 3.3 方法 Build")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ol",[s("li",[this._v("通过反射获取目标的构造函数、如果没有就直接实例化返回结果，否则反射获取构造函数的参数")]),this._v(" "),s("li",[this._v("使用参数调用方法 "),s("code",[this._v("GetDependencies")]),this._v(" 获取依赖")]),this._v(" "),s("li",[this._v("使用依赖通过反射实例化目标并且返回结果")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_3-4-方法-get-dependencies"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-方法-get-dependencies","aria-hidden":"true"}},[this._v("#")]),this._v(" 3.4 方法 Get Dependencies")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ol",[a("li",[t._v("遍历传入的反射参数")]),t._v(" "),a("li",[t._v("如果参数是 "),a("code",[t._v("Class")]),t._v(" 就调用方法 "),a("code",[t._v("Build")]),t._v(" 获取实例，否则调用方法 "),a("code",[t._v("GetDefaultValue")]),t._v(" 获取默认值、最后加入依赖数组")]),t._v(" "),a("li",[t._v("返回依赖数组结果")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_3-5-方法-get-default-value"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-方法-get-default-value","aria-hidden":"true"}},[this._v("#")]),this._v(" 3.5 方法 Get Default Value")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ol",[s("li",[this._v("反射获取参数默认值并且返回结果")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_4-实现自动依赖注入"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-实现自动依赖注入","aria-hidden":"true"}},[this._v("#")]),this._v(" 4. 实现自动依赖注入")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-php extra-class"},[a("pre",{pre:!0,attrs:{class:"language-php"}},[a("code",[a("span",{attrs:{class:"token shell-comment comment"}},[t._v("# 需要注入依赖的控制器动作")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("Controller")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token comment"}},[t._v("// 依赖于Request对象")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("show")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Request "),a("span",{attrs:{class:"token variable"}},[t._v("$request")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{attrs:{class:"token function"}},[t._v("var_dump")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token variable"}},[t._v("$request")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{attrs:{class:"token shell-comment comment"}},[t._v("# 自动依赖注入")]),t._v("\n"),a("span",{attrs:{class:"token variable"}},[t._v("$class")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("ReflectionClass")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token single-quoted-string string"}},[t._v("'Controller'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token variable"}},[t._v("$method")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token variable"}},[t._v("$class")]),a("span",{attrs:{class:"token operator"}},[t._v("-")]),a("span",{attrs:{class:"token operator"}},[t._v(">")]),a("span",{attrs:{class:"token function"}},[t._v("getMethod")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token single-quoted-string string"}},[t._v("'show'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 全部参数类型")]),t._v("\n"),a("span",{attrs:{class:"token variable"}},[t._v("$arguments")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("foreach")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token variable"}},[t._v("$method")]),a("span",{attrs:{class:"token operator"}},[t._v("-")]),a("span",{attrs:{class:"token operator"}},[t._v(">")]),a("span",{attrs:{class:"token function"}},[t._v("getParameters")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("as")]),t._v(" "),a("span",{attrs:{class:"token variable"}},[t._v("$parameter")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token variable"}},[t._v("$type")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token variable"}},[t._v("$parameter")]),a("span",{attrs:{class:"token operator"}},[t._v("-")]),a("span",{attrs:{class:"token operator"}},[t._v(">")]),a("span",{attrs:{class:"token function"}},[t._v("getClass")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token operator"}},[t._v("-")]),a("span",{attrs:{class:"token operator"}},[t._v(">")]),a("span",{attrs:{class:"token function"}},[t._v("getName")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{attrs:{class:"token variable"}},[t._v("$arguments")]),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token variable"}},[t._v("$app")]),a("span",{attrs:{class:"token operator"}},[t._v("-")]),a("span",{attrs:{class:"token operator"}},[t._v(">")]),a("span",{attrs:{class:"token function"}},[t._v("make")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token variable"}},[t._v("$type")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 调用方法，同时注入依赖对象")]),t._v("\n"),a("span",{attrs:{class:"token variable"}},[t._v("$method")]),a("span",{attrs:{class:"token operator"}},[t._v("-")]),a("span",{attrs:{class:"token operator"}},[t._v(">")]),a("span",{attrs:{class:"token function"}},[t._v("invokeArgs")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token variable"}},[t._v("$class")]),a("span",{attrs:{class:"token operator"}},[t._v("-")]),a("span",{attrs:{class:"token operator"}},[t._v(">")]),a("span",{attrs:{class:"token function"}},[t._v("newInstance")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token variable"}},[t._v("$arguments")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"_5-参考"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-参考","aria-hidden":"true"}},[this._v("#")]),this._v(" 5. 参考")])}],!1,null,null,null);n.options.__file="Control-Inversion.md";s.default=n.exports}}]);