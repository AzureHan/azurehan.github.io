(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{179:function(t,a,r){"use strict";r.r(a);var e=r(0),s=Object(e.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("div",{staticClass:"content"},[r("h1",{attrs:{id:"linux-笔记"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#linux-笔记","aria-hidden":"true"}},[t._v("#")]),t._v(" Linux 笔记")]),t._v(" "),r("h2",{attrs:{id:"linux-命令"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#linux-命令","aria-hidden":"true"}},[t._v("#")]),t._v(" Linux 命令")]),t._v(" "),r("h3",{attrs:{id:"ps"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#ps","aria-hidden":"true"}},[t._v("#")]),t._v(" ps")]),t._v(" "),r("p",[r("code",[t._v("ps au | grep php-fpm")])]),t._v(" "),r("h3",{attrs:{id:"top"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#top","aria-hidden":"true"}},[t._v("#")]),t._v(" top")]),t._v(" "),r("p",[r("code",[t._v("top")])]),t._v(" "),r("h3",{attrs:{id:"netstat"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#netstat","aria-hidden":"true"}},[t._v("#")]),t._v(" netstat")]),t._v(" "),r("p",[r("code",[t._v("netstat -anptol")])]),t._v(" "),r("h3",{attrs:{id:"chown"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#chown","aria-hidden":"true"}},[t._v("#")]),t._v(" chown")]),t._v(" "),r("p",[r("code",[t._v("chown root:root -R ./projects")])]),t._v(" "),r("h3",{attrs:{id:"chmod"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#chmod","aria-hidden":"true"}},[t._v("#")]),t._v(" chmod")]),t._v(" "),r("p",[r("code",[t._v("chmod 755 -R ./projects")])]),t._v(" "),r("h2",{attrs:{id:"线程与进程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#线程与进程","aria-hidden":"true"}},[t._v("#")]),t._v(" 线程与进程")]),t._v(" "),r("h3",{attrs:{id:"线程与进程的特点"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#线程与进程的特点","aria-hidden":"true"}},[t._v("#")]),t._v(" 线程与进程的特点")]),t._v(" "),r("ul",[r("li",[t._v("进程是资源分配的最小单位，线程是CPU调度的最小单位")]),t._v(" "),r("li",[t._v("线程没有自己的系统资源，只拥有在运行时必不可少的资源，但同一进程的各线程可以共享进程所拥有的系统资源")])]),t._v(" "),r("h2",{attrs:{id:"进程通讯"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#进程通讯","aria-hidden":"true"}},[t._v("#")]),t._v(" 进程通讯")]),t._v(" "),r("p",[t._v("进程是一个独立的资源 ( CPU 、 RAM 、 IO ) 分配单元，不同进程之间的资源是独立的没有关联，不能在一个进程中直接访问另一个进程的资源，不同的进程需要进行信息的交互和状态的传递等，因此需要进程间通信 ( IPC：Inter Processes Communication ) 。")]),t._v(" "),r("p",[t._v("本地的进程间通信方式")]),t._v(" "),r("ul",[r("li",[t._v("消息传递 ( 管道、 FIFO 、消息队列 )")]),t._v(" "),r("li",[t._v("同步 ( 互斥量、条件变量、读写锁、文件和写记录锁、信号量 )")]),t._v(" "),r("li",[t._v("共享内存 ( 匿名的和具名的 )")]),t._v(" "),r("li",[t._v("远程过程调用 ( Solaris 门 和 Sun RPC )")])]),t._v(" "),r("p",[t._v("网络上进程间通信方式")]),t._v(" "),r("ul",[r("li",[t._v("Socket")])]),t._v(" "),r("h3",{attrs:{id:"进程间通信的目的"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#进程间通信的目的","aria-hidden":"true"}},[t._v("#")]),t._v(" 进程间通信的目的")]),t._v(" "),r("ul",[r("li",[t._v("数据传输 : 一个进程需要将它的数据发送给另一个进程")]),t._v(" "),r("li",[t._v("通知事件 : 一个进程需要向另一个或一组进程发送消息，通知它 ( 它们 ) 发生了某种事件 ( 如进程终止时要通知父进程 )")]),t._v(" "),r("li",[t._v("资源共享 : 多个进程之间共享同样的资源，为了做到这一点，需要内核提供互斥和同步机制")]),t._v(" "),r("li",[t._v("进程控制 : 有些进程希望完全控制另一个进程的执行 ( 如 Debug 进程 ) ，此时控制进程希望能够拦截另一个进程的所有陷入和异常，并能够及时知道它的状态改变")])])])}],!1,null,null,null);s.options.__file="README.md";a.default=s.exports}}]);